!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARROW	lib/gameframe/gui/MainMenu.java	/^    private static final String ARROW = "â†’";$/;"	f	class:MainMenu	file:
COLS	src/gfsokoban/Sokoban.java	/^    private static final int COLS = 20;$/;"	f	class:Sokoban	file:
DEBUG	src/gfsokoban/Main.java	/^    private static final boolean DEBUG = false;$/;"	f	class:Main	file:
DOWN	lib/gameframe/Direction.java	/^    DOWN$/;"	e	enum:Direction	file:
Direction	lib/gameframe/Direction.java	/^public enum Direction {$/;"	g
Drawable	src/gfsokoban/Drawable.java	/^public interface Drawable {$/;"	i
ENDPOINT	lib/gameframe/wsc/GamesRequest.java	/^    private static final String ENDPOINT = "http:\/\/vtek.no\/gfapi\/games\/";$/;"	f	class:GamesRequest	file:
GFClassLoader	lib/gameframe/GFClassLoader.java	/^    public GFClassLoader(URL url) {$/;"	m	class:GFClassLoader
GFClassLoader	lib/gameframe/GFClassLoader.java	/^class GFClassLoader extends URLClassLoader {$/;"	c
GFGame	lib/gameframe/api/GFGame.java	/^    public GFGame(Dimension size) {$/;"	m	class:GFGame
GFGame	lib/gameframe/api/GFGame.java	/^abstract public class GFGame implements GFInputListener {$/;"	c
GFInputListener	lib/gameframe/api/GFInputListener.java	/^public interface GFInputListener {$/;"	i
GFTestFrame	lib/gameframe/api/GFTestFrame.java	/^    public GFTestFrame(GFGame game, boolean debug) {$/;"	m	class:GFTestFrame
GFTestFrame	lib/gameframe/api/GFTestFrame.java	/^public class GFTestFrame implements TimerListener {$/;"	c
Game	lib/gameframe/wsc/Game.java	/^    public Game() {$/;"	m	class:Game
Game	lib/gameframe/wsc/Game.java	/^    public Game(String name, String version, String author, String url) {$/;"	m	class:Game
Game	lib/gameframe/wsc/Game.java	/^public class Game {$/;"	c
GameFrame	lib/gameframe/GameFrame.java	/^    public GameFrame() {$/;"	m	class:GameFrame
GameFrame	lib/gameframe/GameFrame.java	/^public class GameFrame implements TimerListener {$/;"	c
GameObject	src/gfsokoban/GameObject.java	/^    public GameObject(Dimension size, Point position) {$/;"	m	class:GameObject
GameObject	src/gfsokoban/GameObject.java	/^    public GameObject(Dimension size, Point position, Image sprite) {$/;"	m	class:GameObject
GameObject	src/gfsokoban/GameObject.java	/^public abstract class GameObject implements Drawable, Updatable {$/;"	c
GamesRequest	lib/gameframe/wsc/GamesRequest.java	/^public class GamesRequest {$/;"	c
HEIGHT	lib/gameframe/GameFrame.java	/^    public static final int HEIGHT = 480;$/;"	f	class:GameFrame
HEIGHT	lib/gameframe/api/GFTestFrame.java	/^    public static final int HEIGHT = 480;$/;"	f	class:GFTestFrame
Highscore	lib/gameframe/api/Highscore.java	/^public class Highscore {$/;"	c
Highscore	lib/gameframe/gui/Highscore.java	/^    public Highscore(Dimension size) {$/;"	m	class:Highscore
Highscore	lib/gameframe/gui/Highscore.java	/^public class Highscore extends GFGame {$/;"	c
HighscoreRank	lib/gameframe/HighscoreRank.java	/^    public HighscoreRank() {$/;"	m	class:HighscoreRank
HighscoreRank	lib/gameframe/HighscoreRank.java	/^    public HighscoreRank(int score, int rank, boolean madeItToTheList) {$/;"	m	class:HighscoreRank
HighscoreRank	lib/gameframe/HighscoreRank.java	/^public class HighscoreRank {$/;"	c
InputListener	src/gfsokoban/InputListener.java	/^public interface InputListener {$/;"	i
LEFT	lib/gameframe/Direction.java	/^    LEFT,$/;"	e	enum:Direction	file:
ListOfGamesResponse	lib/gameframe/wsc/ListOfGamesResponse.java	/^    public ListOfGamesResponse() {$/;"	m	class:ListOfGamesResponse
ListOfGamesResponse	lib/gameframe/wsc/ListOfGamesResponse.java	/^    public ListOfGamesResponse(String info, String version, Game[] games) {$/;"	m	class:ListOfGamesResponse
ListOfGamesResponse	lib/gameframe/wsc/ListOfGamesResponse.java	/^public class ListOfGamesResponse {$/;"	c
Main	src/gfsokoban/Main.java	/^    public Main(Dimension windowSize) {$/;"	m	class:Main
Main	src/gfsokoban/Main.java	/^public class Main extends GFGame {$/;"	c
MainMenu	lib/gameframe/gui/MainMenu.java	/^    public MainMenu(Dimension size) {$/;"	m	class:MainMenu
MainMenu	lib/gameframe/gui/MainMenu.java	/^public class MainMenu extends GFGame {$/;"	c
Player	src/gfsokoban/Player.java	/^    public Player(Dimension size, Point position, Sokoban game) {$/;"	m	class:Player
Player	src/gfsokoban/Player.java	/^public class Player extends GameObject {$/;"	c
RIGHT	lib/gameframe/Direction.java	/^    RIGHT,$/;"	e	enum:Direction	file:
ROWS	src/gfsokoban/Sokoban.java	/^    private static final int ROWS = 20;$/;"	f	class:Sokoban	file:
Response	lib/gameframe/wsc/Response.java	/^    public Response() {$/;"	m	class:Response
Response	lib/gameframe/wsc/Response.java	/^    public Response(String content, String contentType, int responseCode,$/;"	m	class:Response
Response	lib/gameframe/wsc/Response.java	/^public class Response {$/;"	c
SandboxSecurityPolicy	lib/gameframe/SandboxSecurityPolicy.java	/^public class SandboxSecurityPolicy extends Policy {$/;"	c
Sokoban	src/gfsokoban/Sokoban.java	/^    public Sokoban(Dimension windowSize \/* TODO: MAP *\/) {$/;"	m	class:Sokoban
Sokoban	src/gfsokoban/Sokoban.java	/^public class Sokoban implements InputListener, Updatable, Drawable {$/;"	c
Timer	lib/gameframe/Timer.java	/^    public Timer(int FPS) {$/;"	m	class:Timer
Timer	lib/gameframe/Timer.java	/^public class Timer {$/;"	c
TimerListener	lib/gameframe/TimerListener.java	/^public interface TimerListener {$/;"	i
UP	lib/gameframe/Direction.java	/^    UP,$/;"	e	enum:Direction	file:
UPDATE_INTERVAL	src/gfsokoban/Player.java	/^    private static final float UPDATE_INTERVAL = 0.5F;$/;"	f	class:Player	file:
Updatable	src/gfsokoban/Updatable.java	/^public interface Updatable {$/;"	i
VERSION	lib/gameframe/GameFrame.java	/^    public static final String VERSION = "v0.0.1";$/;"	f	class:GameFrame
WIDTH	lib/gameframe/GameFrame.java	/^    public static final int WIDTH = 640;$/;"	f	class:GameFrame
WIDTH	lib/gameframe/api/GFTestFrame.java	/^    public static final int WIDTH = 640;$/;"	f	class:GFTestFrame
WebClient	lib/gameframe/wsc/WebClient.java	/^public class WebClient {$/;"	c
Window	lib/gameframe/Window.java	/^    public Window(String title, int width, int height) {$/;"	m	class:Window
Window	lib/gameframe/Window.java	/^public class Window {$/;"	c
activeIndex	lib/gameframe/gui/MainMenu.java	/^    private int activeIndex;$/;"	f	class:MainMenu	file:
addListener	lib/gameframe/Timer.java	/^    public void addListener(TimerListener tl) {$/;"	m	class:Timer
applicationPermissions	lib/gameframe/SandboxSecurityPolicy.java	/^    private PermissionCollection applicationPermissions() {$/;"	m	class:SandboxSecurityPolicy	file:
author	lib/gameframe/wsc/Game.java	/^    private String author;$/;"	f	class:Game	file:
averageDelta	lib/gameframe/Timer.java	/^    private float averageDelta; \/\/ The average delta time for the last second.$/;"	f	class:Timer	file:
borderWidth	lib/gameframe/gui/MainMenu.java	/^    private int borderWidth;$/;"	f	class:MainMenu	file:
calculateCellSize	src/gfsokoban/Sokoban.java	/^    private Dimension calculateCellSize() {$/;"	m	class:Sokoban	file:
canMove	src/gfsokoban/Sokoban.java	/^    public boolean canMove(GameObject go, Direction direction) {$/;"	m	class:Sokoban
canvas	lib/gameframe/Window.java	/^    private final Canvas canvas;$/;"	f	class:Window	file:
cellSize	src/gfsokoban/Sokoban.java	/^    private Dimension cellSize;$/;"	f	class:Sokoban	file:
content	lib/gameframe/wsc/Response.java	/^    private String content;$/;"	f	class:Response	file:
contentType	lib/gameframe/wsc/Response.java	/^    private String contentType;$/;"	f	class:Response	file:
debug	lib/gameframe/api/GFTestFrame.java	/^    private boolean debug;$/;"	f	class:GFTestFrame	file:
direction	lib/gameframe/api/GFGame.java	/^    private Direction direction;$/;"	f	class:GFGame	file:
direction	src/gfsokoban/Sokoban.java	/^    private Direction direction;$/;"	f	class:Sokoban	file:
dispose	lib/gameframe/GameFrame.java	/^    private void dispose(String err) {$/;"	m	class:GameFrame	file:
dispose	lib/gameframe/Window.java	/^    public synchronized void dispose() {$/;"	m	class:Window
dispose	lib/gameframe/api/GFTestFrame.java	/^    private void dispose(String err) {$/;"	m	class:GFTestFrame	file:
disposed	lib/gameframe/Window.java	/^    private boolean disposed = false;$/;"	f	class:Window	file:
draw	src/gfsokoban/Drawable.java	/^    void draw(Graphics g);$/;"	m	interface:Drawable
draw	src/gfsokoban/GameObject.java	/^    public void draw(Graphics g) {$/;"	m	class:GameObject
draw	src/gfsokoban/Sokoban.java	/^    public void draw(Graphics g) {$/;"	m	class:Sokoban
drawFrame	lib/gameframe/gui/MainMenu.java	/^    private int drawFrame(Graphics g) {$/;"	m	class:MainMenu	file:
drawGameList	lib/gameframe/gui/MainMenu.java	/^    private void drawGameList(Graphics g, int startY, int endY) {$/;"	m	class:MainMenu	file:
elapsedTime	lib/gameframe/Timer.java	/^    private long elapsedTime = 0;$/;"	f	class:Timer	file:
frame	lib/gameframe/Window.java	/^    private final JFrame frame;$/;"	f	class:Window	file:
game	lib/gameframe/GameFrame.java	/^    private static GFGame game;$/;"	f	class:GameFrame	file:
game	lib/gameframe/api/GFTestFrame.java	/^    private GFGame game;$/;"	f	class:GFTestFrame	file:
game	src/gfsokoban/Main.java	/^    private Sokoban game;$/;"	f	class:Main	file:
game	src/gfsokoban/Player.java	/^    private Sokoban game;$/;"	f	class:Player	file:
gameObjects	src/gfsokoban/Sokoban.java	/^    private ArrayList<GameObject> gameObjects;$/;"	f	class:Sokoban	file:
gameOver	lib/gameframe/api/GFGame.java	/^    protected HighscoreRank gameOver(int score) {$/;"	m	class:GFGame
gamePermissions	lib/gameframe/SandboxSecurityPolicy.java	/^    private PermissionCollection gamePermissions() {$/;"	m	class:SandboxSecurityPolicy	file:
gameframe	lib/gameframe/Direction.java	/^package gameframe;$/;"	p
gameframe	lib/gameframe/GFClassLoader.java	/^package gameframe;$/;"	p
gameframe	lib/gameframe/GameFrame.java	/^package gameframe;$/;"	p
gameframe	lib/gameframe/HighscoreRank.java	/^package gameframe;$/;"	p
gameframe	lib/gameframe/SandboxSecurityPolicy.java	/^package gameframe;$/;"	p
gameframe	lib/gameframe/Timer.java	/^package gameframe;$/;"	p
gameframe	lib/gameframe/TimerListener.java	/^package gameframe;$/;"	p
gameframe	lib/gameframe/Window.java	/^package gameframe;$/;"	p
gameframe.api	lib/gameframe/api/GFGame.java	/^package gameframe.api;$/;"	p
gameframe.api	lib/gameframe/api/GFInputListener.java	/^package gameframe.api;$/;"	p
gameframe.api	lib/gameframe/api/GFTestFrame.java	/^package gameframe.api;$/;"	p
gameframe.api	lib/gameframe/api/Highscore.java	/^package gameframe.api;$/;"	p
gameframe.gui	lib/gameframe/gui/Highscore.java	/^package gameframe.gui;$/;"	p
gameframe.gui	lib/gameframe/gui/MainMenu.java	/^package gameframe.gui;$/;"	p
gameframe.wsc	lib/gameframe/wsc/Game.java	/^package gameframe.wsc;$/;"	p
gameframe.wsc	lib/gameframe/wsc/GamesRequest.java	/^package gameframe.wsc;$/;"	p
gameframe.wsc	lib/gameframe/wsc/ListOfGamesResponse.java	/^package gameframe.wsc;$/;"	p
gameframe.wsc	lib/gameframe/wsc/Response.java	/^package gameframe.wsc;$/;"	p
gameframe.wsc	lib/gameframe/wsc/WebClient.java	/^package gameframe.wsc;$/;"	p
games	lib/gameframe/gui/MainMenu.java	/^    private Game[] games;$/;"	f	class:MainMenu	file:
games	lib/gameframe/wsc/ListOfGamesResponse.java	/^    private Game[] games;$/;"	f	class:ListOfGamesResponse	file:
get	lib/gameframe/wsc/WebClient.java	/^    public static Response get(String url) throws Exception {$/;"	m	class:WebClient
getAuthor	lib/gameframe/wsc/Game.java	/^    public String getAuthor() {$/;"	m	class:Game
getContent	lib/gameframe/wsc/Response.java	/^    public String getContent() {$/;"	m	class:Response
getContentType	lib/gameframe/wsc/Response.java	/^    public String getContentType() {$/;"	m	class:Response
getDirection	lib/gameframe/api/GFGame.java	/^    protected Direction getDirection() {$/;"	m	class:GFGame
getDirection	src/gfsokoban/Sokoban.java	/^    public Direction getDirection() {$/;"	m	class:Sokoban
getDrawGraphics	lib/gameframe/Window.java	/^    public Graphics2D getDrawGraphics() {$/;"	m	class:Window
getElapsedTime	lib/gameframe/Timer.java	/^    public long getElapsedTime() {$/;"	m	class:Timer
getFPS	lib/gameframe/Timer.java	/^    public float getFPS() {$/;"	m	class:Timer
getFocusedComponent	lib/gameframe/Window.java	/^    public Component getFocusedComponent() {$/;"	m	class:Window
getGames	lib/gameframe/wsc/ListOfGamesResponse.java	/^    public Game[] getGames() {$/;"	m	class:ListOfGamesResponse
getInfo	lib/gameframe/wsc/ListOfGamesResponse.java	/^    public String getInfo() {$/;"	m	class:ListOfGamesResponse
getListOfGames	lib/gameframe/wsc/GamesRequest.java	/^    public static ListOfGamesResponse getListOfGames() throws Exception {$/;"	m	class:GamesRequest
getMainClassName	lib/gameframe/GFClassLoader.java	/^    public String getMainClassName() throws IOException {$/;"	m	class:GFClassLoader
getName	lib/gameframe/wsc/Game.java	/^    public String getName() {$/;"	m	class:Game
getPermissions	lib/gameframe/SandboxSecurityPolicy.java	/^    public PermissionCollection getPermissions(ProtectionDomain domain) {$/;"	m	class:SandboxSecurityPolicy
getPosition	src/gfsokoban/GameObject.java	/^    public Point getPosition() {$/;"	m	class:GameObject
getRank	lib/gameframe/HighscoreRank.java	/^    public int getRank() {$/;"	m	class:HighscoreRank
getResponseCode	lib/gameframe/wsc/Response.java	/^    public int getResponseCode() {$/;"	m	class:Response
getResponseMessage	lib/gameframe/wsc/Response.java	/^    public String getResponseMessage() {$/;"	m	class:Response
getScore	lib/gameframe/HighscoreRank.java	/^    public int getScore() {$/;"	m	class:HighscoreRank
getSize	lib/gameframe/api/GFGame.java	/^    public Dimension getSize() {$/;"	m	class:GFGame
getSize	src/gfsokoban/GameObject.java	/^    public Dimension getSize() {$/;"	m	class:GameObject
getUrl	lib/gameframe/wsc/Game.java	/^    public String getUrl() {$/;"	m	class:Game
getVersion	lib/gameframe/wsc/Game.java	/^    public String getVersion() {$/;"	m	class:Game
getVersion	lib/gameframe/wsc/ListOfGamesResponse.java	/^    public String getVersion() {$/;"	m	class:ListOfGamesResponse
gfsokoban	src/gfsokoban/Drawable.java	/^package gfsokoban;$/;"	p
gfsokoban	src/gfsokoban/GameObject.java	/^package gfsokoban;$/;"	p
gfsokoban	src/gfsokoban/InputListener.java	/^package gfsokoban;$/;"	p
gfsokoban	src/gfsokoban/Main.java	/^package gfsokoban;$/;"	p
gfsokoban	src/gfsokoban/Player.java	/^package gfsokoban;$/;"	p
gfsokoban	src/gfsokoban/Sokoban.java	/^package gfsokoban;$/;"	p
gfsokoban	src/gfsokoban/Updatable.java	/^package gfsokoban;$/;"	p
gfx	lib/gameframe/Window.java	/^    private final Graphics2D gfx;$/;"	f	class:Window	file:
imageBuffer	lib/gameframe/Window.java	/^    private final BufferedImage imageBuffer;$/;"	f	class:Window	file:
info	lib/gameframe/wsc/ListOfGamesResponse.java	/^    private String info;$/;"	f	class:ListOfGamesResponse	file:
isAlternate	lib/gameframe/gui/MainMenu.java	/^    private boolean isAlternate = false;$/;"	f	class:MainMenu	file:
isDisposed	lib/gameframe/Window.java	/^    public boolean isDisposed() {$/;"	m	class:Window
isGFGame	lib/gameframe/SandboxSecurityPolicy.java	/^    private boolean isGFGame(ProtectionDomain domain) {$/;"	m	class:SandboxSecurityPolicy	file:
isMadeItToTheList	lib/gameframe/HighscoreRank.java	/^    public boolean isMadeItToTheList() {$/;"	m	class:HighscoreRank
isRunning	lib/gameframe/Timer.java	/^    public boolean isRunning() {$/;"	m	class:Timer
lastRow	lib/gameframe/gui/MainMenu.java	/^    private int lastRow = 0;$/;"	f	class:MainMenu	file:
lastUpdate	lib/gameframe/Timer.java	/^    private long lastUpdate;	\/\/ The timestamp for the last update$/;"	f	class:Timer	file:
listeners	lib/gameframe/Timer.java	/^    private ArrayList<TimerListener> listeners;$/;"	f	class:Timer	file:
loadGame	lib/gameframe/GameFrame.java	/^    public static GFGame loadGame(URL url) {$/;"	m	class:GameFrame
madeItToTheList	lib/gameframe/HighscoreRank.java	/^    private boolean madeItToTheList;$/;"	f	class:HighscoreRank	file:
main	lib/gameframe/GameFrame.java	/^    public static void main(String[] args) {$/;"	m	class:GameFrame
main	src/gfsokoban/Main.java	/^    public static void main(String args[]) {$/;"	m	class:Main
mainMenu	lib/gameframe/GameFrame.java	/^    public static void mainMenu() {$/;"	m	class:GameFrame
margin	lib/gameframe/gui/MainMenu.java	/^    private int margin;$/;"	f	class:MainMenu	file:
menu	lib/gameframe/GameFrame.java	/^    private static MainMenu menu;$/;"	f	class:GameFrame	file:
move	src/gfsokoban/Player.java	/^    private void move(Direction direction) {$/;"	m	class:Player	file:
name	lib/gameframe/wsc/Game.java	/^    private String name;$/;"	f	class:Game	file:
notifyListeners	lib/gameframe/Timer.java	/^    private void notifyListeners(double delta) {$/;"	m	class:Timer	file:
numSamples	lib/gameframe/Timer.java	/^    private int numSamples = 0;$/;"	f	class:Timer	file:
offset	lib/gameframe/gui/MainMenu.java	/^    private int offset = 0;$/;"	f	class:MainMenu	file:
onAction	lib/gameframe/api/GFInputListener.java	/^    void onAction();$/;"	m	interface:GFInputListener
onAction	lib/gameframe/gui/Highscore.java	/^    public void onAction() {$/;"	m	class:Highscore
onAction	lib/gameframe/gui/MainMenu.java	/^    public void onAction() {$/;"	m	class:MainMenu
onAction	src/gfsokoban/InputListener.java	/^    void onAction();$/;"	m	interface:InputListener
onAction	src/gfsokoban/Main.java	/^    public void onAction() {$/;"	m	class:Main
onAction	src/gfsokoban/Sokoban.java	/^    public void onAction() {$/;"	m	class:Sokoban
onAlternate	lib/gameframe/api/GFInputListener.java	/^    void onAlternate();$/;"	m	interface:GFInputListener
onAlternate	lib/gameframe/gui/Highscore.java	/^    public void onAlternate() {$/;"	m	class:Highscore
onAlternate	lib/gameframe/gui/MainMenu.java	/^    public void onAlternate() {$/;"	m	class:MainMenu
onAlternate	src/gfsokoban/InputListener.java	/^    void onAlternate();$/;"	m	interface:InputListener
onAlternate	src/gfsokoban/Main.java	/^    public void onAlternate() {$/;"	m	class:Main
onAlternate	src/gfsokoban/Sokoban.java	/^    public void onAlternate() {$/;"	m	class:Sokoban
onDirection	lib/gameframe/api/GFGame.java	/^    public void onDirection(Direction direction) {$/;"	m	class:GFGame
onDirection	lib/gameframe/api/GFInputListener.java	/^    void onDirection(Direction direction);$/;"	m	interface:GFInputListener
onDirection	lib/gameframe/gui/MainMenu.java	/^    public void onDirection(Direction direction) {$/;"	m	class:MainMenu
onDirection	src/gfsokoban/InputListener.java	/^    void onDirection(Direction direction);$/;"	m	interface:InputListener
onDirection	src/gfsokoban/Main.java	/^    public void onDirection(Direction direction) {$/;"	m	class:Main
onDirection	src/gfsokoban/Sokoban.java	/^    public void onDirection(Direction direction) {$/;"	m	class:Sokoban
position	src/gfsokoban/GameObject.java	/^    private Point position;$/;"	f	class:GameObject	file:
printInfo	lib/gameframe/gui/MainMenu.java	/^    private int printInfo(Graphics g) {$/;"	m	class:MainMenu	file:
rank	lib/gameframe/HighscoreRank.java	/^    private int rank;$/;"	f	class:HighscoreRank	file:
removeListener	lib/gameframe/Timer.java	/^    public void removeListener(TimerListener tl) {$/;"	m	class:Timer
render	lib/gameframe/Window.java	/^    public synchronized void render() {$/;"	m	class:Window
responseCode	lib/gameframe/wsc/Response.java	/^    private int responseCode;$/;"	f	class:Response	file:
responseMessage	lib/gameframe/wsc/Response.java	/^    private String responseMessage;$/;"	f	class:Response	file:
running	lib/gameframe/Timer.java	/^    private boolean running = false;$/;"	f	class:Timer	file:
score	lib/gameframe/HighscoreRank.java	/^    private int score;$/;"	f	class:HighscoreRank	file:
setContent	lib/gameframe/wsc/Response.java	/^    public void setContent(String content) {$/;"	m	class:Response
setContentType	lib/gameframe/wsc/Response.java	/^    public void setContentType(String contentType) {$/;"	m	class:Response
setDirection	lib/gameframe/GameFrame.java	/^    private void setDirection(int keyCode) {$/;"	m	class:GameFrame	file:
setDirection	lib/gameframe/api/GFGame.java	/^    private void setDirection(Direction direction) {$/;"	m	class:GFGame	file:
setDirection	lib/gameframe/api/GFTestFrame.java	/^    private void setDirection(int keyCode) {$/;"	m	class:GFTestFrame	file:
setMadeItToTheList	lib/gameframe/HighscoreRank.java	/^    public void setMadeItToTheList(boolean madeItToTheList) {$/;"	m	class:HighscoreRank
setPosition	src/gfsokoban/GameObject.java	/^    public void setPosition(Point position) {$/;"	m	class:GameObject
setRank	lib/gameframe/HighscoreRank.java	/^    public void setRank(int rank) {$/;"	m	class:HighscoreRank
setResponseCode	lib/gameframe/wsc/Response.java	/^    public void setResponseCode(int responseCode) {$/;"	m	class:Response
setResponseMessage	lib/gameframe/wsc/Response.java	/^    public void setResponseMessage(String responseMessage) {$/;"	m	class:Response
setScore	lib/gameframe/HighscoreRank.java	/^    public void setScore(int score) {$/;"	m	class:HighscoreRank
setSize	src/gfsokoban/GameObject.java	/^    public void setSize(Dimension size) {$/;"	m	class:GameObject
setupFocusListener	lib/gameframe/Window.java	/^    private void setupFocusListener(JFrame frame, Canvas canvas) {$/;"	m	class:Window	file:
showTestFrame	src/gfsokoban/Main.java	/^    private static void showTestFrame() {$/;"	m	class:Main	file:
size	lib/gameframe/api/GFGame.java	/^    private final Dimension size;$/;"	f	class:GFGame	file:
size	lib/gameframe/gui/MainMenu.java	/^    private Dimension size;$/;"	f	class:MainMenu	file:
size	src/gfsokoban/GameObject.java	/^    private Dimension size;$/;"	f	class:GameObject	file:
sprite	src/gfsokoban/GameObject.java	/^    private Image sprite;$/;"	f	class:GameObject	file:
start	lib/gameframe/Timer.java	/^    public void start() {$/;"	m	class:Timer
startGame	lib/gameframe/GameFrame.java	/^    public static void startGame(GFGame game) {$/;"	m	class:GameFrame
stop	lib/gameframe/Timer.java	/^    public void stop() {$/;"	m	class:Timer
takedown	lib/gameframe/GameFrame.java	/^    private boolean takedown = false;$/;"	f	class:GameFrame	file:
takedown	lib/gameframe/api/GFTestFrame.java	/^    private boolean takedown = false;$/;"	f	class:GFTestFrame	file:
targetDelay	lib/gameframe/Timer.java	/^    private long targetDelay;$/;"	f	class:Timer	file:
tempAvgDelta	lib/gameframe/Timer.java	/^    private long tempAvgDelta = 0;$/;"	f	class:Timer	file:
timeSinceLastUpdate	src/gfsokoban/Player.java	/^    private float timeSinceLastUpdate;$/;"	f	class:Player	file:
timer	lib/gameframe/GameFrame.java	/^    private final Timer timer;$/;"	f	class:GameFrame	file:
timer	lib/gameframe/api/GFTestFrame.java	/^    private final Timer timer;$/;"	f	class:GFTestFrame	file:
update	lib/gameframe/GameFrame.java	/^    public void update(float delta) {$/;"	m	class:GameFrame
update	lib/gameframe/TimerListener.java	/^    void update(float delta);$/;"	m	interface:TimerListener
update	lib/gameframe/api/GFGame.java	/^    abstract public void update(float delta, Graphics g);$/;"	m	class:GFGame
update	lib/gameframe/api/GFTestFrame.java	/^    public void update(float delta) {$/;"	m	class:GFTestFrame
update	lib/gameframe/gui/Highscore.java	/^    public void update(float delta, Graphics g) {$/;"	m	class:Highscore
update	lib/gameframe/gui/MainMenu.java	/^    public void update(float delta, Graphics g) {$/;"	m	class:MainMenu
update	src/gfsokoban/GameObject.java	/^    public abstract void update(float delta);$/;"	m	class:GameObject
update	src/gfsokoban/Main.java	/^    public void update(float delta, Graphics g) {$/;"	m	class:Main
update	src/gfsokoban/Player.java	/^    public void update(float delta) {$/;"	m	class:Player
update	src/gfsokoban/Sokoban.java	/^    public void update(float delta) {$/;"	m	class:Sokoban
update	src/gfsokoban/Updatable.java	/^    void update(float delta);$/;"	m	interface:Updatable
url	lib/gameframe/GFClassLoader.java	/^    private URL url;$/;"	f	class:GFClassLoader	file:
url	lib/gameframe/wsc/Game.java	/^    private String url;$/;"	f	class:Game	file:
version	lib/gameframe/wsc/Game.java	/^    private String version;$/;"	f	class:Game	file:
version	lib/gameframe/wsc/ListOfGamesResponse.java	/^    private String version;$/;"	f	class:ListOfGamesResponse	file:
window	lib/gameframe/GameFrame.java	/^    private final Window window;$/;"	f	class:GameFrame	file:
window	lib/gameframe/api/GFTestFrame.java	/^    private final Window window;$/;"	f	class:GFTestFrame	file:
windowSize	src/gfsokoban/Sokoban.java	/^    private Dimension windowSize;$/;"	f	class:Sokoban	file:
